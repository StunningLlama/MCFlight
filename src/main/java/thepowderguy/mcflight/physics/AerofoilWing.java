package thepowderguy.mcflight.physics;

import thepowderguy.mcflight.util.Vec3;

public class AerofoilWing extends ControlSurface {
	public AerofoilWing(double x, double y, double z, double scale, double area, Vec3 normal, Vec3 rotationaxis) {
		super(x, y, z, scale, area, normal, rotationaxis);
		// TODO Auto-generated constructor stub
	}

	protected static double critAoA = 21.0;
	

	//public static double[] lift = {0.0, 0.06492615177838702, 0.12984941173838446, 0.1947553207880445, 0.25960628528830265, 0.32433000977941967, 0.38880792970742317, 0.45286364415054925, 0.5162513485456844, 0.5786442674148072, 0.6396230870914297, 0.6986643884470395, 0.7551290796175415, 0.8082508287296992, 0.8571244966275771, 0.9006945695989816, 0.9377435921019033, 0.9668805994909583, 0.9865295507438308, 0.9949177611877131, 0.9900643352257495, 0.9697685990634762, 0.931598533435264, 0.8728792063307597, 0.7906812057213275, 0.6897758258053173, 0.6501610341965861, 0.633599839734877, 0.6295064882803101, 0.6364344334189236, 0.6495190528271049, 0.6622106946333051, 0.6740955347138786, 0.6851590932219072, 0.6953878909155601, 0.7047694655804739, 0.713292387213041, 0.7209462719461079, 0.7277217947001187, 0.7336107005442869, 0.7386058147539587, 0.7427010515519081, 0.74589142152292, 0.7481730376926238, 0.7495431202631728, 0.75, 0.749543120265523, 0.7481730376973214, 0.7458914215299592, 0.7427010515612804, 0.7386058147656527, 0.7336107005582883, 0.7277217947164103, 0.7209462719646701, 0.713292387233851, 0.7047694656035066, 0.6953878909407871, 0.6851590932492979, 0.6740955347433997, 0.6622106946649206, 0.6495190528607763, 0.6360360721415066, 0.621778179442223, 0.6067627458089186, 0.5910080652345242, 0.5745333323704964, 0.5573586191410906, 0.5395048502888138, 0.5209937778808491, 0.5018479548075121, 0.48209070730502857, 0.46174610653610804, 0.44083893926294065, 0.4193946776483449, 0.3974394482218616, 0.37500000004860135, 0.35210367213962995, 0.32877836014359374, 0.30505248236016935, 0.2809549451167431, 0.25651510755050333, 0.23176274583885437, 0.2067280169217311, 0.18144142176001293, 0.1559337681748013, 0.1302361333128352, 0.10437982578377492, 0.07839634751548394, 0.05231735537378239, 0.026174622593432346, 0.0};
	public static double[] lift = {0, 0.0865682024, 0.173132549, 0.2596737611, 0.3461417137, 0.432440013, 0.5184105729, 0.6038181922, 0.6883351314, 0.7715256899, 0.8528307828, 0.9315525179, 1.0068387728, 1.0776677716, 1.1428326622, 1.2009260928, 1.2503247895, 1.2891741327, 1.3153727343, 1.3265570149, 1.3200857803, 1.2930247988, 1.2421313779, 1.1638389418, 1.0542416076, 0.9197011011, 0.8668813789, 0.8447997863, 0.8393419844, 0.8485792446, 0.8660254038, 0.8829475928, 0.8987940463, 0.9135454576, 0.9271838546, 0.9396926208, 0.9510565163, 0.9612616959, 0.9702957263, 0.9781476007, 0.984807753, 0.9902680687, 0.9945218954, 0.9975640503, 0.999390827, 1, 0.999390827, 0.9975640503, 0.9945218954, 0.9902680687, 0.984807753, 0.9781476007, 0.9702957263, 0.961261696, 0.9510565163, 0.9396926208, 0.9271838546, 0.9135454577, 0.8987940463, 0.8829475929, 0.8660254038, 0.8480480962, 0.8290375726, 0.8090169944, 0.7880107536, 0.7660444432, 0.7431448255, 0.7193398004, 0.6946583705, 0.6691306064, 0.6427876097, 0.6156614754, 0.5877852524, 0.5591929035, 0.5299192643, 0.5000000001, 0.4694715629, 0.4383711469, 0.4067366431, 0.3746065935, 0.3420201434, 0.3090169945, 0.2756373559, 0.2419218957, 0.2079116909, 0.1736481778, 0.139173101, 0.1045284634, 0.0697564738, 0.0348994968, 0};
	public double getLiftFromAlpha(double a) {
		if (!Double.isFinite(a))
			return 0;
		double x = Math.abs(a);
		int lower = (int)Math.floor(x);
		if (lower >= 90 || lower < 0)
			return 0.0;
		double phigher = x-Math.floor(x);
		double plower = 1.0-phigher;
		return (lift[lower]*plower + lift[lower+1]*phigher)*Math.signum(a);
	}

	public double getDragFromAlpha(double a) {
		return dSin(a)*dSin(a)*2.0;
	}
	

	public static double dSin(double a) {
		return Math.sin(Math.toRadians(a));
	}

	@Override
	public boolean isStalled() {
		return angleOfAttack < -critAoA || angleOfAttack > critAoA;
	}

	@Override
	public ControlSurface getInstance() {
		return new AerofoilWing(this.position.x, position.y, position.z, 1, wingArea, Vec3.copy(normal), Vec3.copy(rotationaxis));
	}
}

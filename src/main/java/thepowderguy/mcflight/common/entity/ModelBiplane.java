package thepowderguy.mcflight.common.entity;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.client.renderer.GlStateManager;
import net.minecraft.entity.Entity;
import thepowderguy.mcflight.math.Vec3;

// Date: 12/16/2016 10:09:13 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX







public class ModelBiplane extends ModelBase
{
	public static float toRad = (float) (Math.PI/180.0);
	//fields
    ModelRenderer WingTop;
    ModelRenderer WingBottom;
    ModelRenderer SupportStrut1;
    ModelRenderer SupportStrut2;
    ModelRenderer SupportStrut3;
    ModelRenderer SupportStrut4;
    ModelRenderer SupportStrut5;
    ModelRenderer SupportStrut6;
    ModelRenderer SupportStrut7;
    ModelRenderer SupportStrut8;
    ModelRenderer WheelSupport1;
    ModelRenderer Wheel1;
    ModelRenderer WheelSupport2;
    ModelRenderer Wheel2;
    ModelRenderer WheelSupport3;
    ModelRenderer Wheel3;
    ModelRenderer Engine;
    ModelRenderer Fuselage1;
    ModelRenderer Fuselage3;
    ModelRenderer Fuselage2;
    ModelRenderer Fuselage5;
    ModelRenderer Fuselage6;
    ModelRenderer Fuselage8;
    ModelRenderer Fuselage9;
    ModelRenderer Fuselage10;
    ModelRenderer Fuselage11;
    ModelRenderer Fuselage12;
    ModelRenderer Fuselage13;
    ModelRenderer Fuselage14;
    ModelRenderer Fuselage15;
    ModelRenderer Fuselage16;
    ModelRenderer Fuselage17;
    ModelRenderer Fuselage18;
    ModelRenderer Fuselage19;
    ModelRenderer Fuselage20;
    ModelRenderer Fuselage21;
    ModelRenderer Fuselage22;
    ModelRenderer Fuselage23;
    ModelRenderer Fuselage24;
    ModelRenderer EngineCowl1;
    ModelRenderer EngineCowl2;
    ModelRenderer EngineCowl3;
    ModelRenderer EngineCowl4;
    ModelRenderer Propeller1;
    ModelRenderer Propeller2;
    ModelRenderer PropellerAxis;
    ModelRenderer ElevatorR;
    ModelRenderer ElevatorL;
    ModelRenderer Rudder;
    ModelRenderer RudderTri1;
    ModelRenderer RudderTri2;
    ModelRenderer RudderTri3;
    ModelRenderer AlieronL;
    ModelRenderer AlieronR;
    ModelRenderer ElevatorLeft;
    ModelRenderer ElevatorLeftAlt;
    ModelRenderer ElevatorRight;
    ModelRenderer ElevatorRightAlt;
    ModelRenderer ElevModelL;
    ModelRenderer ElevModelR;

    public ModelBiplane()
    {
    	textureWidth = 256;
    	textureHeight = 256;

    	WingTop = new BiplaneModelRenderer(this, 0, 0);
    	WingTop.addBox(-50F, 0F, 1F, 100, 1, 19);
    	WingTop.setRotationPoint(0F, -19F, -11F);
    	WingTop.setTextureSize(256, 256);
    	WingTop.mirror = true;
    	setRotation(WingTop, 0F, 0F, 0F);
    	WingBottom = new BiplaneModelRenderer(this, 0, 0);
    	WingBottom.addBox(-50F, 0.1F, 1F, 100, 1, 19);
    	WingBottom.setRotationPoint(0F, 1F, -11F);
    	WingBottom.setTextureSize(256, 256);
    	WingBottom.mirror = true;
    	setRotation(WingBottom, 0F, 0F, 0F);
    	SupportStrut1 = new BiplaneModelRenderer(this, 16, 64);
    	SupportStrut1.addBox(0F, -14F, 0F, 1, 19, 1);
    	SupportStrut1.setRotationPoint(-41F, -4F, -7F);
    	SupportStrut1.setTextureSize(256, 256);
    	SupportStrut1.mirror = true;
    	setRotation(SupportStrut1, 0F, 0F, 0F);
    	SupportStrut2 = new BiplaneModelRenderer(this, 16, 64);
    	SupportStrut2.addBox(0F, -14F, 0F, 1, 19, 1);
    	SupportStrut2.setRotationPoint(-41F, -4F, 6F);
    	SupportStrut2.setTextureSize(256, 256);
    	SupportStrut2.mirror = true;
    	setRotation(SupportStrut2, 0F, 0F, 0F);
    	SupportStrut3 = new BiplaneModelRenderer(this, 16, 64);
    	SupportStrut3.addBox(0F, -14F, 0F, 1, 19, 1);
    	SupportStrut3.setRotationPoint(41F, -4F, -8F);
    	SupportStrut3.setTextureSize(256, 256);
    	SupportStrut3.mirror = true;
    	setRotation(SupportStrut3, 0F, 0F, 0F);
    	SupportStrut4 = new BiplaneModelRenderer(this, 16, 64);
    	SupportStrut4.addBox(0F, -14F, 0F, 1, 19, 1);
    	SupportStrut4.setRotationPoint(41F, -4F, 6F);
    	SupportStrut4.setTextureSize(256, 256);
    	SupportStrut4.mirror = true;
    	setRotation(SupportStrut4, 0F, 0F, 0F);
    	SupportStrut5 = new BiplaneModelRenderer(this, 16, 64);
    	SupportStrut5.addBox(0F, 0F, 0F, 1, 6, 1);
    	SupportStrut5.setRotationPoint(6F, -18F, -5F);
    	SupportStrut5.setTextureSize(256, 256);
    	SupportStrut5.mirror = true;
    	setRotation(SupportStrut5, 0F, 0F, 0F);
    	SupportStrut6 = new BiplaneModelRenderer(this, 16, 64);
    	SupportStrut6.addBox(0F, 0F, 0F, 1, 6, 1);
    	SupportStrut6.setRotationPoint(6F, -18F, 5F);
    	SupportStrut6.setTextureSize(256, 256);
    	SupportStrut6.mirror = true;
    	setRotation(SupportStrut6, 0F, 0F, 0F);
    	SupportStrut7 = new BiplaneModelRenderer(this, 16, 64);
    	SupportStrut7.addBox(0F, 0F, 0F, 1, 6, 1);
    	SupportStrut7.setRotationPoint(-7F, -18F, -3F);
    	SupportStrut7.setTextureSize(256, 256);
    	SupportStrut7.mirror = true;
    	setRotation(SupportStrut7, 0F, 0F, 0F);
    	SupportStrut8 = new BiplaneModelRenderer(this, 16, 64);
    	SupportStrut8.addBox(0F, 0F, 0F, 1, 6, 1);
    	SupportStrut8.setRotationPoint(-7F, -18F, 5F);
    	SupportStrut8.setTextureSize(256, 256);
    	SupportStrut8.mirror = true;
    	setRotation(SupportStrut8, 0F, 0F, 0F);
    	WheelSupport1 = new BiplaneModelRenderer(this, 0, 0);
    	WheelSupport1.addBox(0F, 0F, 0F, 1, 7, 1);
    	WheelSupport1.setRotationPoint(-5F, 1F, 7F);
    	WheelSupport1.setTextureSize(256, 256);
    	WheelSupport1.mirror = true;
    	setRotation(WheelSupport1, 0F, 0F, 0F);
    	Wheel1 = new BiplaneModelRenderer(this, 0, 85);
    	Wheel1.addBox(0F, 0F, 0F, 1, 5, 5);
    	Wheel1.setRotationPoint(-6F, 5F, 5F);
    	Wheel1.setTextureSize(256, 256);
    	Wheel1.mirror = true;
    	setRotation(Wheel1, 0F, 0F, 0F);
    	WheelSupport2 = new BiplaneModelRenderer(this, 0, 0);
    	WheelSupport2.addBox(0F, 0F, 0F, 1, 7, 1);
    	WheelSupport2.setRotationPoint(4F, 1F, 7F);
    	WheelSupport2.setTextureSize(256, 256);
    	WheelSupport2.mirror = true;
    	setRotation(WheelSupport2, 0F, 0F, 0F);
    	Wheel2 = new BiplaneModelRenderer(this, 0, 85);
    	Wheel2.addBox(0F, 0F, 0F, 1, 5, 5);
    	Wheel2.setRotationPoint(5F, 5F, 5F);
    	Wheel2.setTextureSize(256, 256);
    	Wheel2.mirror = true;
    	setRotation(Wheel2, 0F, 0F, 0F);
    	WheelSupport3 = new BiplaneModelRenderer(this, 0, 0);
    	WheelSupport3.addBox(0F, 0F, 0F, 1, 3, 1);
    	WheelSupport3.setRotationPoint(-0.5F, -3F, -49F);
    	WheelSupport3.setTextureSize(256, 256);
    	WheelSupport3.mirror = true;
    	setRotation(WheelSupport3, 0F, 0F, 0F);
    	Wheel3 = new BiplaneModelRenderer(this, 4, 77);
    	Wheel3.addBox(0F, 0F, 0F, 1, 3, 3);
    	Wheel3.setRotationPoint(-0.5F, 0F, -50F);
    	Wheel3.setTextureSize(256, 256);
    	Wheel3.mirror = true;
    	setRotation(Wheel3, 0F, 0F, 0F);
    	Engine = new BiplaneModelRenderer(this, 64, 64);
    	Engine.addBox(-7F, 0F, 0F, 10, 10, 1);
    	Engine.setRotationPoint(2F, -10F, 16F);
    	Engine.setTextureSize(256, 256);
    	Engine.mirror = true;
    	setRotation(Engine, 0F, 0F, 0F);
    	Fuselage1 = new BiplaneModelRenderer(this, 0, 0);
    	Fuselage1.addBox(-6F, 0F, 0F, 10, 2, 29);
    	Fuselage1.setRotationPoint(1F, -2.5F, -38.7F);
    	Fuselage1.setTextureSize(256, 256);
    	Fuselage1.mirror = true;
    	setRotation(Fuselage1, -0.0872665F, 0F, 0F);
    	Fuselage3 = new BiplaneModelRenderer(this, 0, 0);
    	Fuselage3.addBox(0F, -5F, -13F, 1, 10, 28);
    	Fuselage3.setRotationPoint(5F, -5.5F, -26F);
    	Fuselage3.setTextureSize(256, 256);
    	Fuselage3.mirror = true;
    	setRotation(Fuselage3, 0F, 0.0698132F, 0F);
    	Fuselage2 = new BiplaneModelRenderer(this, 0, 0);
    	Fuselage2.addBox(-5F, -0.5F, -10F, 8, 3, 10);
    	Fuselage2.setRotationPoint(1F, -10.1F, -39F);
    	Fuselage2.setTextureSize(256, 256);
    	Fuselage2.mirror = true;
    	setRotation(Fuselage2, 0.1092638F, 0F, 0F);
    	Fuselage5 = new BiplaneModelRenderer(this, 0, 0);
    	Fuselage5.addBox(0.2F, -3F, -10F, 1, 7, 10);
    	Fuselage5.setRotationPoint(-5.3F, -6.3F, -39F);
    	Fuselage5.setTextureSize(256, 256);
    	Fuselage5.mirror = true;
    	setRotation(Fuselage5, 0F, -0.1115358F, 0F);
    	Fuselage6 = new BiplaneModelRenderer(this, 0, 0);
    	Fuselage6.addBox(-0.2F, -3F, -10F, 1, 7, 10);
    	Fuselage6.setRotationPoint(4.3F, -6.5F, -39F);
    	Fuselage6.setTextureSize(256, 256);
    	Fuselage6.mirror = true;
    	setRotation(Fuselage6, 0F, 0.111544F, 0F);
    	Fuselage8 = new BiplaneModelRenderer(this, 0, 0);
    	Fuselage8.addBox(0F, -2F, -13F, 2, 3, 29);
    	Fuselage8.setRotationPoint(4.01F, -0.3F, -26F);
    	Fuselage8.setTextureSize(256, 256);
    	Fuselage8.mirror = true;
    	setRotation(Fuselage8, -0.0872665F, 0.0698132F, 0F);
    	Fuselage9 = new BiplaneModelRenderer(this, 0, 0);
    	Fuselage9.addBox(-7F, -2F, -16F, 10, 2, 14);
    	Fuselage9.setRotationPoint(2F, -10F, -22.9F);
    	Fuselage9.setTextureSize(256, 256);
    	Fuselage9.mirror = true;
    	setRotation(Fuselage9, 0.0872665F, 0F, 0F);
    	Fuselage10 = new BiplaneModelRenderer(this, 0, 0);
    	Fuselage10.addBox(-7F, -2F, -10.2F, 1, 2, 10);
    	Fuselage10.setRotationPoint(11.1F, -8.6F, -39.1F);
    	Fuselage10.setTextureSize(256, 256);
    	Fuselage10.mirror = true;
    	setRotation(Fuselage10, 0.1082104F, 0.1099557F, 0F);
    	Fuselage11 = new BiplaneModelRenderer(this, 0, 0);
    	Fuselage11.addBox(0F, -5F, -13F, 1, 10, 28);
    	Fuselage11.setRotationPoint(-6F, -5.5F, -26F);
    	Fuselage11.setTextureSize(256, 256);
    	Fuselage11.mirror = true;
    	setRotation(Fuselage11, 0F, -0.0698132F, 0F);
    	Fuselage12 = new BiplaneModelRenderer(this, 0, 0);
    	Fuselage12.addBox(-7F, -2F, -16F, 1, 2, 13);
    	Fuselage12.setRotationPoint(0.8F, -10F, -22.4F);
    	Fuselage12.setTextureSize(256, 256);
    	Fuselage12.mirror = true;
    	setRotation(Fuselage12, 0.0872665F, -0.0698132F, 0F);
    	Fuselage13 = new BiplaneModelRenderer(this, 0, 0);
    	Fuselage13.addBox(-7F, -2F, -9F, 1, 2, 10);
    	Fuselage13.setRotationPoint(2F, -0.8F, -39.1F);
    	Fuselage13.setTextureSize(256, 256);
    	Fuselage13.mirror = true;
    	setRotation(Fuselage13, -0.1745329F, -0.1099557F, 0F);
    	Fuselage14 = new BiplaneModelRenderer(this, 0, 0);
    	Fuselage14.addBox(-7F, -2F, -9F, 1, 2, 10);
    	Fuselage14.setRotationPoint(2F, -8.5F, -39.1F);
    	Fuselage14.setTextureSize(256, 256);
    	Fuselage14.mirror = true;
    	setRotation(Fuselage14, 0.1082104F, -0.1099557F, 0F);
    	Fuselage15 = new BiplaneModelRenderer(this, 0, 0);
    	Fuselage15.addBox(-7F, -2F, -9F, 1, 2, 10);
    	Fuselage15.setRotationPoint(11.1F, -0.5F, -39.1F);
    	Fuselage15.setTextureSize(256, 256);
    	Fuselage15.mirror = true;
    	setRotation(Fuselage15, -0.1745329F, 0.1099557F, 0F);
    	Fuselage16 = new BiplaneModelRenderer(this, 0, 0);
    	Fuselage16.addBox(0F, -2F, -13F, 2, 3, 29);
    	Fuselage16.setRotationPoint(-5.99F, -0.3F, -26F);
    	Fuselage16.setTextureSize(256, 256);
    	Fuselage16.mirror = true;
    	setRotation(Fuselage16, -0.0872665F, -0.0698132F, 0F);
    	Fuselage17 = new BiplaneModelRenderer(this, 0, 0);
    	Fuselage17.addBox(-7F, -2F, -16F, 1, 2, 13);
    	Fuselage17.setRotationPoint(12.2F, -10F, -22.4F);
    	Fuselage17.setTextureSize(256, 256);
    	Fuselage17.mirror = true;
    	setRotation(Fuselage17, 0.0872665F, 0.0698132F, 0F);
    	Fuselage18 = new BiplaneModelRenderer(this, 0, 0);
    	Fuselage18.addBox(0F, 0F, 0F, 14, 1, 8);
    	Fuselage18.setRotationPoint(-7F, 1F, 9F);
    	Fuselage18.setTextureSize(256, 256);
    	Fuselage18.mirror = true;
    	setRotation(Fuselage18, 0F, 0F, 0F);
    	Fuselage19 = new BiplaneModelRenderer(this, 0, 0);
    	Fuselage19.addBox(0F, 0F, -16F, 12, 2, 5);
    	Fuselage19.setRotationPoint(-6F, -12F, -10F);
    	Fuselage19.setTextureSize(256, 256);
    	Fuselage19.mirror = true;
    	setRotation(Fuselage19, 0.0174533F, 0F, 0F);
    	Fuselage20 = new BiplaneModelRenderer(this, 0, 0);
    	Fuselage20.addBox(0F, 0F, 0F, 12, 2, 9);
    	Fuselage20.setRotationPoint(-6F, -12F, 8F);
    	Fuselage20.setTextureSize(256, 256);
    	Fuselage20.mirror = true;
    	setRotation(Fuselage20, 0F, 0F, 0F);
    	Fuselage21 = new BiplaneModelRenderer(this, 0, 0);
    	Fuselage21.addBox(0F, 0F, 0F, 8, 7, 1);
    	Fuselage21.setRotationPoint(-4F, -9.4F, -49.2F);
    	Fuselage21.setTextureSize(256, 256);
    	Fuselage21.mirror = true;
    	setRotation(Fuselage21, 0F, 0F, 0F);
    	Fuselage22 = new BiplaneModelRenderer(this, 0, 0);
    	Fuselage22.addBox(0F, -7F, 0F, 1, 13, 28);
    	Fuselage22.setRotationPoint(-7F, -5F, -11F);
    	Fuselage22.setTextureSize(256, 256);
    	Fuselage22.mirror = true;
    	setRotation(Fuselage22, 0F, 0F, 0F);
    	Fuselage23 = new BiplaneModelRenderer(this, 0, 0);
    	Fuselage23.addBox(0F, 0F, 0F, 1, 13, 28);
    	Fuselage23.setRotationPoint(6F, -12F, -11F);
    	Fuselage23.setTextureSize(256, 256);
    	Fuselage23.mirror = true;
    	setRotation(Fuselage23, 0F, 0F, 0F);
    	Fuselage24 = new BiplaneModelRenderer(this, 0, 0);
    	Fuselage24.addBox(-5F, -0.5F, -11F, 8, 3, 11);
    	Fuselage24.setRotationPoint(1F, -3F, -38F);
    	Fuselage24.setTextureSize(256, 256);
    	Fuselage24.mirror = true;
    	setRotation(Fuselage24, -0.1764951F, 0F, 0F);
    	EngineCowl1 = new BiplaneModelRenderer(this, 0, 0);
    	EngineCowl1.addBox(-7F, 0F, 0F, 2, 14, 1);
    	EngineCowl1.setRotationPoint(0F, -12F, 17F);
    	EngineCowl1.setTextureSize(256, 256);
    	EngineCowl1.mirror = true;
    	setRotation(EngineCowl1, 0F, 0F, 0F);
    	EngineCowl2 = new BiplaneModelRenderer(this, 0, 0);
    	EngineCowl2.addBox(-1F, 0F, 0F, 2, 14, 1);
    	EngineCowl2.setRotationPoint(6F, -12F, 17F);
    	EngineCowl2.setTextureSize(256, 256);
    	EngineCowl2.mirror = true;
    	setRotation(EngineCowl2, 0F, 0F, 0F);
    	EngineCowl3 = new BiplaneModelRenderer(this, 0, 0);
    	EngineCowl3.addBox(-1F, 0F, 0F, 10, 2, 1);
    	EngineCowl3.setRotationPoint(-4F, -12F, 17F);
    	EngineCowl3.setTextureSize(256, 256);
    	EngineCowl3.mirror = true;
    	setRotation(EngineCowl3, 0F, 0F, 0F);
    	EngineCowl4 = new BiplaneModelRenderer(this, 0, 0);
    	EngineCowl4.addBox(-1F, 0F, 0F, 10, 2, 1);
    	EngineCowl4.setRotationPoint(-4F, 0F, 17F);
    	EngineCowl4.setTextureSize(256, 256);
    	EngineCowl4.mirror = true;
    	setRotation(EngineCowl4, 0F, 0F, 0F);
    	Propeller1 = new BiplaneModelRenderer(this, 0, 64);
    	Propeller1.addBox(-1.5F, 1F, -0.5F, 3, 11, 1);
    	Propeller1.setRotationPoint(0F, -5F, 19.5F);
    	Propeller1.setTextureSize(256, 256);
    	Propeller1.mirror = true;
    	setRotation(Propeller1, 0F, 0F, 0F);
    	Propeller2 = new BiplaneModelRenderer(this, 0, 64);
    	Propeller2.addBox(-1.5F, -12F, -0.5F, 3, 11, 1);
    	Propeller2.setRotationPoint(0F, -5F, 19.5F);
    	Propeller2.setTextureSize(256, 256);
    	Propeller2.mirror = true;
    	setRotation(Propeller2, 0F, 0F, 0F);
    	PropellerAxis = new BiplaneModelRenderer(this, 16, 64);
    	PropellerAxis.addBox(-1F, -1F, 0F, 2, 2, 4);
    	PropellerAxis.setRotationPoint(0F, -5F, 17F);
    	PropellerAxis.setTextureSize(256, 256);
    	PropellerAxis.mirror = true;
    	setRotation(PropellerAxis, 0F, 0F, 0F);
    	ElevatorR = new BiplaneModelRenderer(this, 0, 0);
    	ElevatorR.addBox(-7.5F, -0.5F, -6F, 12, 1, 5);
    	ElevatorR.setRotationPoint(11F, -5.5F, -45.7F);
    	ElevatorR.setTextureSize(256, 256);
    	ElevatorR.mirror = true;
    	setRotation(ElevatorR, 0F, 0F, -0.0174533F);
    	ElevatorL = new BiplaneModelRenderer(this, 0, 0);
    	ElevatorL.addBox(-7.5F, -0.5F, -5F, 12, 1, 5);
    	ElevatorL.setRotationPoint(-9F, -5.5F, -46.7F);
    	ElevatorL.setTextureSize(256, 256);
    	ElevatorL.mirror = true;
    	setRotation(ElevatorL, 0F, 0F, 0F);
    	Rudder = new BiplaneModelRenderer(this, 0, 0);
    	Rudder.addBox(-0.5F, -2.5F, -4F, 1, 11, 4);
    	Rudder.setRotationPoint(0F, -12.8F, -49.5F);
    	Rudder.setTextureSize(256, 256);
    	Rudder.mirror = true;
    	setRotation(Rudder, 0F, 0F, 0F);
    	RudderTri1 = new BiplaneModelRenderer(this, 0, 0);
    	RudderTri1.addBox(0.01F, -2F, 0.1F, 1, 3, 10);
    	RudderTri1.setRotationPoint(-0.5F, -14F, -49F);
    	RudderTri1.setTextureSize(256, 256);
    	RudderTri1.mirror = true;
    	setRotation(RudderTri1, -0.8922867F, 0F, 0F);
    	RudderTri2 = new BiplaneModelRenderer(this, 0, 0);
    	RudderTri2.addBox(0.01F, 1F, 2.766667F, 1, 2, 4);
    	RudderTri2.setRotationPoint(-0.5F, -14F, -49F);
    	RudderTri2.setTextureSize(256, 256);
    	RudderTri2.mirror = true;
    	setRotation(RudderTri2, -0.8922867F, 0F, 0F);
    	RudderTri3 = new BiplaneModelRenderer(this, 0, 0);
    	RudderTri3.addBox(0F, -2.5F, -7F, 1, 11, 2);
    	RudderTri3.setRotationPoint(-0.5F, -12.8F, -42.5F);
    	RudderTri3.setTextureSize(256, 256);
    	RudderTri3.mirror = true;
    	setRotation(RudderTri3, 0F, 0F, 0F);
    	AlieronL = new BiplaneModelRenderer(this, 0, 0);
    	AlieronL.addBox(0F, -0.5F, -4F, 14, 1, 4);
    	AlieronL.setRotationPoint(-30F, 1.5F, -10F);
    	AlieronL.setTextureSize(256, 256);
    	AlieronL.mirror = true;
    	setRotation(AlieronL, 0F, 0F, 0F);
    	AlieronR = new BiplaneModelRenderer(this, 0, 0);
    	AlieronR.addBox(0F, -0.5F, -4F, 14, 1, 4);
    	AlieronR.setRotationPoint(16F, 1.5F, -10F);
    	AlieronR.setTextureSize(256, 256);
    	AlieronR.mirror = true;
    	setRotation(AlieronR, 0F, 0F, -0.0174533F);
    	ElevatorLeft = new BiplaneModelRenderer(this, 0, 0);
    	ElevatorLeft.addBox(-9F, 0.05F, 0F, 14, 1, 3);
    	ElevatorLeft.setRotationPoint(-7F, -6F, -43F);
    	ElevatorLeft.setTextureSize(256, 256);
    	ElevatorLeft.mirror = true;
    	setRotation(ElevatorLeft, 0F, -0.4164007F, 0F);
    	ElevatorLeftAlt = new BiplaneModelRenderer(this, 0, 0);
    	ElevatorLeftAlt.addBox(-16.5F, 0F, 0F, 12, 1, 3);
    	ElevatorLeftAlt.setRotationPoint(0F, -6F, -46.7F);
    	ElevatorLeftAlt.setTextureSize(256, 256);
    	ElevatorLeftAlt.mirror = true;
    	setRotation(ElevatorLeftAlt, 0F, 0F, 0F);
    	ElevatorRight = new BiplaneModelRenderer(this, 0, 0);
    	ElevatorRight.addBox(-15F, 0.1F, -3F, 9, 1, 3);
    	ElevatorRight.setRotationPoint(-3F, -6F, -40.3F);
    	ElevatorRight.setTextureSize(256, 256);
    	ElevatorRight.mirror = true;
    	setRotation(ElevatorRight, 0F, -2.725192F, -0.0174533F);
    	ElevatorRightAlt = new BiplaneModelRenderer(this, 0, 0);
    	ElevatorRightAlt.addBox(-0.5F, 0F, 0F, 12, 1, 3);
    	ElevatorRightAlt.setRotationPoint(4.2F, -6F, -46.7F);
    	ElevatorRightAlt.setTextureSize(256, 256);
    	ElevatorRightAlt.mirror = true;
    	setRotation(ElevatorRightAlt, 0F, 0F, -0.0174533F);
    	ElevModelL = new BiplaneModelRenderer(this, 0, 0);
    	ElevModelL.addBox(-15F, 0.05F, -3F, 9, 1, 3);
    	ElevModelL.setRotationPoint(1F, -6F, -38F);
    	ElevModelL.setTextureSize(256, 256);
    	ElevModelL.mirror = true;
    	setRotation(ElevModelL, 0F, -0.4164007F, 0F);
    	ElevModelR = new BiplaneModelRenderer(this, 0, 0);
    	ElevModelR.addBox(-18F, 0.1F, -6F, 13, 1, 3);
    	ElevModelR.setRotationPoint(-3F, -6F, -41.3F);
    	ElevModelR.setTextureSize(256, 256);
    	ElevModelR.mirror = true;
    	setRotation(ElevModelR, 0F, -2.725192F, -0.0174533F);
    }

	public void render(EntityAirplane entity, float f, float f1, float f2, float f3, float f4, float f5, float partialTicks)
	{
		super.render(entity, f, f1, f2, f3, f4, f5);
		setRotationAngles(f, f1, f2, f3, f4, f5, entity);
		Vec3 controlPositions = entity.getInterpolatedControlSurfaces(partialTicks);
		setControlSurfaceRotations((float)controlPositions.z, (float)controlPositions.y, (float)controlPositions.x,(float)( entity.prevProppos+(entity.propPos-entity.prevProppos)*partialTicks));
	    SupportStrut1.render(f5);
	    SupportStrut2.render(f5);
	    SupportStrut3.render(f5);
	    SupportStrut4.render(f5);
	    SupportStrut5.render(f5);
	    SupportStrut6.render(f5);
	    SupportStrut7.render(f5);
	    SupportStrut8.render(f5);
	    Wheel1.render(f5);
	    Wheel2.render(f5);
	    Wheel3.render(f5);
	    Propeller1.render(f5);
	    Propeller2.render(f5);
	    PropellerAxis.render(f5);
	    Engine.render(f5);
		
		float[] f_col = AirplaneColors.getDyeRgb(entity.getFuselageColor());
		GlStateManager.color(f_col[0], f_col[1], f_col[2]);
	    Fuselage1.render(f5);
	    Fuselage3.render(f5);
	    Fuselage2.render(f5);
	    Fuselage5.render(f5);
	    Fuselage6.render(f5);
	    Fuselage8.render(f5);
	    Fuselage9.render(f5);
	    Fuselage10.render(f5);
	    Fuselage11.render(f5);
	    Fuselage12.render(f5);
	    Fuselage13.render(f5);
	    Fuselage14.render(f5);
	    Fuselage15.render(f5);
	    Fuselage16.render(f5);
	    Fuselage17.render(f5);
	    Fuselage18.render(f5);
	    Fuselage19.render(f5);
	    Fuselage20.render(f5);
	    Fuselage21.render(f5);
	    Fuselage22.render(f5);
	    Fuselage23.render(f5);
	    Fuselage24.render(f5);
	    EngineCowl1.render(f5);
	    EngineCowl2.render(f5);
	    EngineCowl3.render(f5);
	    EngineCowl4.render(f5);
	    WheelSupport1.render(f5);
	    WheelSupport2.render(f5);
	    WheelSupport3.render(f5);

		float[] w_col = AirplaneColors.getDyeRgb(entity.getWingColor());
		GlStateManager.color(w_col[0], w_col[1], w_col[2]);
	    WingTop.render(f5);
	    WingBottom.render(f5);
	    ElevatorR.render(f5);
	    ElevatorL.render(f5);
	    Rudder.render(f5);
	    RudderTri1.render(f5);
	    RudderTri2.render(f5);
	    RudderTri3.render(f5);
	    AlieronL.render(f5);
	    AlieronR.render(f5);
	    ElevatorLeft.render(f5);
	    ElevatorLeftAlt.render(f5);
	    ElevatorRight.render(f5);
	    ElevatorRightAlt.render(f5);
	    ElevModelL.render(f5);
	    ElevModelR.render(f5);
			
	}

	public void setControlSurfaceRotations(float alierons, float elevators, float rudder, float proppos) {
		setRotationDeg(AlieronL, alierons, 0, 0);
		setRotationDeg(AlieronR, -alierons, 0, 0);
		setRotationDeg(ElevatorL, elevators, 0, 0);
		setRotationDeg(ElevatorR, elevators, 0, 0);
		setRotationDeg(Rudder, 0, rudder, 0);
		setRotationDeg(Propeller1, 0, 0, proppos);
		setRotationDeg(Propeller2, 0, 0, proppos);

	}

	private void setRotationDeg(ModelRenderer model, float x, float y, float z)
	{
		model.rotateAngleX = x*toRad;
		model.rotateAngleY = y*toRad;
		model.rotateAngleZ = z*toRad;
	}

	private void setRotation(ModelRenderer model, float x, float y, float z)
	{
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity e)
	{
		super.setRotationAngles(f, f1, f2, f3, f4, f5, e);
	}

}

class BiplaneModelRenderer extends ModelRenderer {

	public BiplaneModelRenderer(ModelBase model, int texOffX, int texOffY)
	{
		super(model, texOffX, texOffY);
		//offsetZ = RenderBiplane.scale * -11f/16f;
		offsetY = RenderBiplane.scale * 5f/16f;
	}

}